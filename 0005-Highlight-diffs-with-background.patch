From 59120f01d1854a192bc6aea1a993112d7331cd8d Mon Sep 17 00:00:00 2001
From: Evgenii Kotelnikov <evgenii.kotelnikov@ericsson.com>
Date: Wed, 24 Jun 2020 18:28:59 +0200
Subject: [PATCH 5/5] Highlight diffs with background

Change-Id: Ic677dc2543779bc4fc45cca6ac6026aef97af2c6
---
 src/atomizer_cli.erl    |  4 +--
 src/atomizer_output.erl | 79 +++++++++++++++++++++++++++++++++++--------------
 2 files changed, 59 insertions(+), 24 deletions(-)

diff --git a/src/atomizer_cli.erl b/src/atomizer_cli.erl
index ca37c53..57e2753 100755
--- a/src/atomizer_cli.erl
+++ b/src/atomizer_cli.erl
@@ -175,9 +175,9 @@ show_difference_helper([], _) -> [];
 show_difference_helper([K | Loose], [C | Lookalike]) ->
     if
         K == C -> [K | show_difference_helper(Loose, Lookalike)];
-        K == $_; K == $- -> [atomizer_output:green([K]) | show_difference_helper(Loose, [C | Lookalike])];
+        K == $_; K == $- -> [atomizer_output:bg_green([K]) | show_difference_helper(Loose, [C | Lookalike])];
         C == $_; C == $- -> show_difference_helper([K | Loose], Lookalike);
-        true -> [atomizer_output:yellow([K]) | show_difference_helper(Loose, Lookalike)]
+        true -> [atomizer_output:bg_yellow([K]) | show_difference_helper(Loose, Lookalike)]
     end.
 
 -spec show_loose_atom(atomizer:loose_atom()) -> ok.
diff --git a/src/atomizer_output.erl b/src/atomizer_output.erl
index 3cc44e3..9f10149 100644
--- a/src/atomizer_output.erl
+++ b/src/atomizer_output.erl
@@ -13,6 +13,14 @@
     blue/1,
     magenta/1,
     cyan/1,
+
+    bg_red/1,
+    bg_yellow/1,
+    bg_green/1,
+    bg_blue/1,
+    bg_magenta/1,
+    bg_cyan/1,
+
     bold/1,
     italic/1,
     invert/1
@@ -108,16 +116,24 @@ erase_progress_bar(LastShownProgressBar) ->
 
 %%% Colored ASCII output
 
--define(RED,    "\e[31m").
--define(GREEN,  "\e[32m").
--define(YELLOW, "\e[33m").
--define(BLUE,   "\e[34m").
--define(MAGENTA,"\e[35m").
--define(CYAN,   "\e[36m").
--define(BOLD,   "\e[1m").
--define(ITALIC, "\e[3m").
--define(INVERT, "\e[7m").
--define(CLEAR,  "\e[00m").
+-define(CLEAR,     "\e[00m").
+-define(BOLD,      "\e[1m").
+-define(ITALIC,    "\e[3m").
+-define(INVERT,    "\e[7m").
+
+-define(FG_RED,    "\e[31m").
+-define(FG_GREEN,  "\e[32m").
+-define(FG_YELLOW, "\e[33m").
+-define(FG_BLUE,   "\e[34m").
+-define(FG_MAGENTA,"\e[35m").
+-define(FG_CYAN,   "\e[36m").
+
+-define(BG_RED,    "\e[41m").
+-define(BG_GREEN,  "\e[42m").
+-define(BG_YELLOW, "\e[43m").
+-define(BG_BLUE,   "\e[44m").
+-define(BG_MAGENTA,"\e[45m").
+-define(BG_CYAN,   "\e[46m").
 
 -spec ascii_color(string(), io_lib:chars()) -> io_lib:chars().
 ascii_color(Color, Chars) -> [Color, ascii_recolor(Color, Chars), ?CLEAR].
@@ -130,29 +146,48 @@ ascii_recolor(Color, Chars) ->
                   end,
                   Chars).
 
+-spec bold(io_lib:chars()) -> io_lib:chars().
+bold(Chars) -> ascii_color(?BOLD, Chars).
+
+-spec italic(io_lib:chars()) -> io_lib:chars().
+italic(Chars) -> ascii_color(?ITALIC, Chars).
+
+-spec invert(io_lib:chars()) -> io_lib:chars().
+invert(Chars) -> ascii_color(?INVERT, Chars).
+
 -spec red(io_lib:chars()) -> io_lib:chars().
-red(Chars) -> ascii_color(?RED, Chars).
+red(Chars) -> ascii_color(?FG_RED, Chars).
 
 -spec yellow(io_lib:chars()) -> io_lib:chars().
-yellow(Chars) -> ascii_color(?YELLOW, Chars).
+yellow(Chars) -> ascii_color(?FG_YELLOW, Chars).
 
 -spec blue(io_lib:chars()) -> io_lib:chars().
-blue(Chars) -> ascii_color(?BLUE, Chars).
+blue(Chars) -> ascii_color(?FG_BLUE, Chars).
 
 -spec green(io_lib:chars()) -> io_lib:chars().
-green(Chars) -> ascii_color(?GREEN, Chars).
+green(Chars) -> ascii_color(?FG_GREEN, Chars).
 
 -spec magenta(io_lib:chars()) -> io_lib:chars().
-magenta(Chars) -> ascii_color(?MAGENTA, Chars).
+magenta(Chars) -> ascii_color(?FG_MAGENTA, Chars).
 
 -spec cyan(io_lib:chars()) -> io_lib:chars().
-cyan(Chars) -> ascii_color(?CYAN, Chars).
+cyan(Chars) -> ascii_color(?FG_CYAN, Chars).
 
--spec bold(io_lib:chars()) -> io_lib:chars().
-bold(Chars) -> ascii_color(?BOLD, Chars).
 
--spec italic(io_lib:chars()) -> io_lib:chars().
-italic(Chars) -> ascii_color(?ITALIC, Chars).
+-spec bg_red(bg_io_lib:chars()) -> io_lib:chars().
+bg_red(Chars) -> ascii_color(?BG_RED, Chars).
 
--spec invert(io_lib:chars()) -> io_lib:chars().
-invert(Chars) -> ascii_color(?INVERT, Chars).
+-spec bg_yellow(io_lib:chars()) -> io_lib:chars().
+bg_yellow(Chars) -> ascii_color(?BG_YELLOW, Chars).
+
+-spec bg_blue(io_lib:chars()) -> io_lib:chars().
+bg_blue(Chars) -> ascii_color(?BG_BLUE, Chars).
+
+-spec bg_green(io_lib:chars()) -> io_lib:chars().
+bg_green(Chars) -> ascii_color(?BG_GREEN, Chars).
+
+-spec bg_magenta(io_lib:chars()) -> io_lib:chars().
+bg_magenta(Chars) -> ascii_color(?BG_MAGENTA, Chars).
+
+-spec bg_cyan(io_lib:chars()) -> io_lib:chars().
+bg_cyan(Chars) -> ascii_color(?BG_CYAN, Chars).
-- 
2.8.3

